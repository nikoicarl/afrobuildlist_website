<div class="cart-container">
    <div class="row">
        <!-- Cart Items -->
        <div class="col-lg-8 col-12">
            <div class="cart-main">
                <table class="table cart-table table-hover">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Subtotal</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="cartItems">
                        <!-- Cart items will be inserted dynamically here -->
                    </tbody>
                </table>

                <div class="cart-actions">
                    <input type="text" class="coupon-input" placeholder="Apply Coupon Code">
                    <button class="apply-coupon-btn">Apply Coupon Code</button>
                    <button id="updateCartBtn" class="update-cart-btn">Update Cart</button>
                </div>
            </div>
        </div>

        <!-- Cart Summary -->
        <div class="col-lg-4 col-12">
            <div class="cart-summary">
                <div class="summary-row">
                    <span class="summary-label">Subtotal</span>
                    <span class="summary-value" id="subtotalPrice">GH₵0.00</span>
                </div>
                <div class="summary-row">
                    <span class="summary-label">Discount</span>
                    <span class="summary-value discount-value">GH₵0.00</span>
                </div>
                <div class="summary-row">
                    <span class="summary-label">Shipping</span>
                    <span class="summary-value discount-value">Free</span>
                </div>
                <div class="summary-row total-row">
                    <span class="total-label">Total:</span>
                    <span class="total-value" id="totalPrice">GH₵0.00</span>
                </div>
                <button class="checkout-btn">Proceed To Checkout</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const userID = localStorage.getItem('userID');

        // Ensure that a user is logged in
        if (userID) {
            displayCart(userID);
        } else {
            document.getElementById('cartItems').innerHTML = "<tr><td colspan='5'>Please log in to view your cart.</td></tr>";
        }

        // Attach event listener for "Update Cart" button
        const updateCartBtn = document.getElementById('updateCartBtn');
        if (updateCartBtn) {
            updateCartBtn.addEventListener('click', () => {
                // Display SweetAlert notification for cart update
                Swal.fire({
                    title: 'Cart Updated!',
                    text: 'Your cart has been updated successfully.',
                    icon: 'success',
                    confirmButtonText: 'OK'
                });

                // Call the function to update the cart in localStorage
                updateCartInLocalStorage();
            });
        }
    });

    // Function to update the cart in localStorage
    function updateCartInLocalStorage() {
        const cart = JSON.parse(localStorage.getItem(`cart_${localStorage.getItem('userID')}`)) || {};
        
        // Iterate over each cart item to recalculate and update its values if needed
        Object.keys(cart).forEach(itemID => {
            const item = cart[itemID];

            // Recalculate item total price
            item.totalPrice = item.price * item.quantity;
        });

        // After updates, save the cart back into localStorage
        localStorage.setItem(`cart_${localStorage.getItem('userID')}`, JSON.stringify(cart));

        // Refresh the cart display with updated values
        displayCart(localStorage.getItem('userID'));
    }

    // Function to display the cart items
    function displayCart(userID) {
        const cartItemsContainer = document.getElementById('cartItems');
        const cart = JSON.parse(localStorage.getItem(`cart_${userID}`)) || {};

        // Clear any previous content
        cartItemsContainer.innerHTML = '';

        // If the cart is empty, show a message
        if (Object.keys(cart).length === 0) {
            cartItemsContainer.innerHTML = "<tr><td colspan='5'>Your cart is empty.</td></tr>";
            document.getElementById('totalPrice').textContent = 'GH₵0.00';
            document.getElementById('subtotalPrice').textContent = 'GH₵0.00';
            return;
        }

        // Render each cart item
        let subtotalPrice = 0;
        Object.values(cart).forEach(item => {
            subtotalPrice += item.totalPrice;

            // Create a row for each cart item
            const itemRow = document.createElement('tr');
            itemRow.innerHTML = `
                <td>${item.name}</td>
                <td>GH₵${item.price.toFixed(2)}</td>
                <td>
                    <input type="number" class="quantity-input" data-id="${item.id}" value="${item.quantity}" min="1">
                </td>
                <td>GH₵<span id="subtotal-${item.id}">${item.totalPrice.toFixed(2)}</span></td>
                <td><button class="remove-btn" data-id="${item.id}">Remove</button></td>
            `;

            // Append the row to the cart items container
            cartItemsContainer.appendChild(itemRow);

            // Add event listener for quantity input change
            itemRow.querySelector('.quantity-input').addEventListener('input', updateItemQuantity);

            // Add event listener for remove button
            itemRow.querySelector('.remove-btn').addEventListener('click', removeItemFromCart);
        });

        // Update the subtotal and total prices
        updateCartSummary(cart);
    }

    // Function to handle quantity update
    function updateItemQuantity(event) {
        const input = event.target;
        const itemID = input.getAttribute('data-id');
        const newQuantity = parseInt(input.value);
        const cart = JSON.parse(localStorage.getItem(`cart_${localStorage.getItem('userID')}`)) || {};

        if (cart[itemID] && newQuantity >= 1) {
            // Update the quantity
            cart[itemID].quantity = newQuantity;

            // Recalculate the total price for that item
            cart[itemID].totalPrice = cart[itemID].price * cart[itemID].quantity;

            // Update the cart in localStorage
            localStorage.setItem(`cart_${localStorage.getItem('userID')}`, JSON.stringify(cart));

            // Update the displayed quantity and total price
            input.value = newQuantity;
            document.getElementById(`subtotal-${itemID}`).textContent = cart[itemID].totalPrice.toFixed(2);

            // Recalculate and update the overall total price
            updateCartSummary(cart);
        }
    }

    // Function to remove an item from the cart
    function removeItemFromCart(event) {
        const button = event.target;
        const itemID = button.getAttribute('data-id');
        const cart = JSON.parse(localStorage.getItem(`cart_${localStorage.getItem('userID')}`)) || {};

        // Remove the item from the cart
        delete cart[itemID];

        // Update the cart in localStorage
        localStorage.setItem(`cart_${localStorage.getItem('userID')}`, JSON.stringify(cart));
        

        // Remove the item row from the DOM
        const itemRow = button.closest('tr');
        itemRow.remove();

        // SweetAlert notification for item removal
        Swal.fire({
            title: 'Item Removed',
            text: 'An item has been removed from your cart.',
            icon: 'info',
            confirmButtonText: 'OK'
        });

        // Update the cart summary
        updateCartSummary(cart);
    }

    // Function to update the cart summary (Total and Subtotal)
    function updateCartSummary(cart) {
        let subtotalPrice = 0;
        Object.values(cart).forEach(item => {
            subtotalPrice += item.totalPrice;
        });

        // Update subtotal and total price
        document.getElementById('subtotalPrice').textContent = `GH₵${subtotalPrice.toFixed(2)}`;
        document.getElementById('totalPrice').textContent = `GH₵${subtotalPrice.toFixed(2)}`;
    }
</script>

