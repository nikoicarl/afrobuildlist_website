<div class="cart-container">
    <div class="row">
        <div class="col-lg-8">
            <div class="cart-main">
                <div class="cart-header">
                    <div style="flex: 1; min-width: 200px;">Products</div>
                    <div style="min-width: 100px; text-align: center;">Price</div>
                    <div style="min-width: 120px; text-align: center;">Quantity</div>
                    <div style="min-width: 100px; text-align: center;">Subtotal</div>
                </div>

                <div id="cartItems">
                    <!-- Cart items will be populated here -->
                </div>

                <div class="cart-actions">
                    <input type="text" class="coupon-input" placeholder="Apply Coupon Code">
                    <button class="apply-coupon-btn">Apply Coupon Code</button>
                    <button id="updateCartBtn" class="update-cart-btn">Update Cart</button>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="cart-summary">
                <div class="summary-row">
                    <span class="summary-label">Subtotal</span>
                    <span class="summary-value" id="subtotalPrice">GHc 1,000.00</span>
                </div>
                <div class="summary-row">
                    <span class="summary-label">Discount</span>
                    <span class="summary-value discount-value">26%</span>
                </div>
                <div class="summary-row">
                    <span class="summary-label">Shipping</span>
                    <span class="summary-value discount-value">Free</span>
                </div>
                <div class="summary-row total-row">
                    <span class="total-label">Total:</span>
                    <span class="total-value" id="totalPrice">GHc 1,000.00</span>
                </div>
                <button class="checkout-btn">Proceed To Checkout</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const userID = localStorage.getItem('userID');

        // Ensure that a user is logged in
        if (userID) {
            displayCart(userID);
        } else {
            document.getElementById('cartItems').innerHTML = "<p>Please log in to view your cart.</p>";
        }

        // Attach event listener for "Update Cart" button
        const updateCartBtn = document.getElementById('updateCartBtn');
        if (updateCartBtn) {
            updateCartBtn.addEventListener('click', () => {
                alert("Cart updated");
                // You can add functionality to update the cart items here
            });
        }
    });

    // Function to display the cart items
    function displayCart(userID) {
        const cartItemsContainer = document.getElementById('cartItems');
        const cart = JSON.parse(localStorage.getItem(`cart_${userID}`)) || {};

        // Clear any previous content
        cartItemsContainer.innerHTML = '';

        // If the cart is empty, show a message
        if (Object.keys(cart).length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
            document.getElementById('totalPrice').textContent = '₵0.00';
            document.getElementById('subtotalPrice').textContent = '₵0.00';
            return;
        }

        // Render each cart item
        let subtotalPrice = 0;
        Object.values(cart).forEach(item => {
            subtotalPrice += item.totalPrice;

            // Create a div for each cart item
            const itemDiv = document.createElement('div');
            itemDiv.classList.add('cart-item', 'd-flex', 'justify-content-between', 'mb-3', 'p-3');
            itemDiv.innerHTML = `
                <div class="d-flex flex-column flex-md-row justify-content-between w-100">
                    <div class="cart-item-name">${item.name}</div>
                    <div class="cart-item-price">₵${item.price.toFixed(2)}</div>
                    <div class="cart-item-quantity d-flex align-items-center">
                        <button class="quantity-btn" data-id="${item.id}" data-action="decrease">-</button>
                        <span class="mx-2" id="quantity-${item.id}">${item.quantity}</span>
                        <button class="quantity-btn" data-id="${item.id}" data-action="increase">+</button>
                    </div>
                    <div class="cart-item-total">₵<span id="subtotal-${item.id}">${item.totalPrice.toFixed(2)}</span></div>
                </div>
            `;

            // Append to the cart items container
            cartItemsContainer.appendChild(itemDiv);

            // Add event listeners for quantity buttons
            itemDiv.querySelectorAll('.quantity-btn').forEach(button => {
                button.addEventListener('click', updateItemQuantity);
            });
        });

        // Update prices
        document.getElementById('subtotalPrice').textContent = `₵${subtotalPrice.toFixed(2)}`;
        document.getElementById('totalPrice').textContent = `₵${subtotalPrice.toFixed(2)}`;
    }

    // Function to handle quantity update
    function updateItemQuantity(event) {
        const button = event.target;
        const action = button.getAttribute('data-action');
        const itemID = button.getAttribute('data-id');
        const cart = JSON.parse(localStorage.getItem(`cart_${localStorage.getItem('userID')}`)) || {};

        if (cart[itemID]) {
            // Update the quantity based on the button action
            if (action === 'increase') {
                cart[itemID].quantity += 1;
            } else if (action === 'decrease' && cart[itemID].quantity > 1) {
                cart[itemID].quantity -= 1;
            }
            
            // Recalculate the total price for that item
            cart[itemID].totalPrice = cart[itemID].price * cart[itemID].quantity;

            // Update the cart in localStorage
            localStorage.setItem(`cart_${localStorage.getItem('userID')}`, JSON.stringify(cart));

            // Update the displayed quantity and total price
            document.getElementById(`quantity-${itemID}`).textContent = cart[itemID].quantity;
            document.getElementById(`subtotal-${itemID}`).textContent = cart[itemID].totalPrice.toFixed(2);

            // Recalculate and update the overall total price
            updateCartSummary(cart);
        }
    }

    // Function to update the cart summary (Total and Subtotal)
    function updateCartSummary(cart) {
        let subtotalPrice = 0;
        Object.values(cart).forEach(item => {
            subtotalPrice += item.totalPrice;
        });

        // Update subtotal and total price
        document.getElementById('subtotalPrice').textContent = `₵${subtotalPrice.toFixed(2)}`;
        document.getElementById('totalPrice').textContent = `₵${subtotalPrice.toFixed(2)}`;
    }
</script>

<style>
    body {
        background-color: #f5f5f5;
        font-family: Arial, sans-serif;
    }

    .cart-container {
        max-width: 1200px;
        margin: 40px auto;
        padding: 0 20px;
    }

    .cart-main {
        background: white;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }

    .cart-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px 30px;
        background: #f8f9fa;
        border-radius: 10px;
        margin-bottom: 20px;
        font-weight: 600;
        color: #666;
    }

    .cart-item {
        display: flex;
        align-items: center;
        padding: 20px 30px;
        border-bottom: 1px solid #eee;
        position: relative;
    }

    .cart-item:last-child {
        border-bottom: none;
    }

    .product-image {
        width: 80px;
        height: 80px;
        background: #e9ecef;
        border-radius: 8px;
        margin-right: 20px;
        position: relative;
    }

    .remove-btn {
        position: absolute;
        top: -5px;
        right: -5px;
        background: #333;
        color: white;
        border: none;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        font-size: 12px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .product-name {
        flex: 1;
        font-weight: 500;
        color: #333;
        min-width: 200px;
    }

    .product-price {
        min-width: 100px;
        text-align: center;
        font-weight: 600;
        color: #333;
    }

    .quantity-control {
        display: flex;
        align-items: center;
        min-width: 120px;
        justify-content: center;
    }

    .quantity-btn {
        background: white;
        border: 2px solid #e9ecef;
        width: 36px;
        height: 36px;
        border-radius: 8px;
        cursor: pointer;
        font-size: 18px;
        font-weight: 600;
        color: #666;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .quantity-btn:hover {
        border-color: #ddd;
        background: #f8f9fa;
    }

    .quantity-display {
        margin: 0 15px;
        font-weight: 600;
        color: #333;
        min-width: 30px;
        text-align: center;
    }

    .product-subtotal {
        min-width: 100px;
        text-align: center;
        font-weight: 600;
        color: #333;
    }

    .cart-actions {
        display: flex;
        gap: 15px;
        margin-top: 30px;
        padding: 0 30px;
    }

    .coupon-input {
        flex: 1;
        padding: 12px 20px;
        border: 2px solid #e9ecef;
        border-radius: 10px;
        font-size: 14px;
        background: #f8f9fa;
    }

    .coupon-input::placeholder {
        color: #999;
    }

    .apply-coupon-btn {
        background: var(--primary-color);
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 10px;
        font-weight: 600;
        cursor: pointer;
        white-space: nowrap;
    }

    .update-cart-btn {
        background: #e9ecef;
        color: #666;
        border: none;
        padding: 12px 25px;
        border-radius: 10px;
        font-weight: 600;
        cursor: pointer;
        white-space: nowrap;
    }

    .cart-summary {
        background: white;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        height: fit-content;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        font-size: 16px;
    }

    .summary-label {
        color: #666;
        font-weight: 500;
    }

    .summary-value {
        font-weight: 600;
        color: #333;
    }

    .discount-value {
        color: var(--primary-color);
    }

    .total-row {
        border-top: 2px solid #eee;
        padding-top: 20px;
        margin-top: 20px;
        font-size: 18px;
        font-weight: 700;
    }

    .total-label {
        color: #333;
    }

    .total-value {
        color: #333;
        font-size: 20px;
    }

    .checkout-btn {
        width: 100%;
        background: var(--primary-color);
        color: white;
        border: none;
        padding: 15px;
        border-radius: 15px;
        font-size: 16px;
        font-weight: 600;
        margin-top: 25px;
        cursor: pointer;
    }

    .checkout-btn:hover {
        background: #218838;
    }

    @media (max-width: 992px) {
        .cart-container {
            margin: 20px auto;
        }

        .row {
            flex-direction: column;
        }

        .cart-summary {
            margin-top: 30px;
        }
    }

    @media (max-width: 768px) {
        .cart-item {
            flex-direction: column;
            align-items: flex-start;
            gap: 15px;
            padding: 20px 15px;
        }

        .cart-header {
            display: none;
        }

        .product-image {
            margin-right: 0;
        }

        .product-name,
        .product-price,
        .quantity-control,
        .product-subtotal {
            width: 100%;
            min-width: auto;
            text-align: left;
        }

        .quantity-control {
            justify-content: flex-start;
        }

        .cart-actions {
            flex-direction: column;
            padding: 0 15px;
        }

        .cart-main {
            padding: 20px 15px;
        }
    }
</style>
